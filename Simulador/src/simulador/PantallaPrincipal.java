
 /* To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulador;


import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import Config_Enums.Addressing;
import Config_Enums.AudioExtension;
import Config_Enums.Format_Content;
import Config_Enums.Format_Length;
import Config_Enums.ImagesExtension;
import Config_Enums.MailBox_Discipline;
import Config_Enums.Sync_Receive;
import Config_Enums.Sync_Send;
import javax.swing.JOptionPane;
import Config_Enums.VideoExtension;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aleandro
 */
public class PantallaPrincipal extends javax.swing.JFrame {
    Controller controlador; 
    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal() {
        controlador = Controller.getInstance();
        initComponents();
        
        /* 
        configTabs.setEnabledAt(1,false);
        configTabs.setEnabledAt(2,false);
        configTabs.setEnabledAt(3,false);
        */

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpSincronizacionSend = new javax.swing.ButtonGroup();
        btngrpSincronizacionReceive = new javax.swing.ButtonGroup();
        btngrpAddressing = new javax.swing.ButtonGroup();
        btngrpFormatLength = new javax.swing.ButtonGroup();
        btngrpMailBoxDiscipline = new javax.swing.ButtonGroup();
        btngrpInteractiveSend = new javax.swing.ButtonGroup();
        configTabs = new javax.swing.JTabbedPane();
        configTabPanel1 = new javax.swing.JPanel();
        panelConfigSincronizacion = new javax.swing.JPanel();
        lblSincronizacion = new javax.swing.JLabel();
        panelSincronizacionReceive = new javax.swing.JPanel();
        rdbtnBSincronizacionReceiveBlocking = new javax.swing.JRadioButton();
        lblSincronizacionReceive = new javax.swing.JLabel();
        rdbtnSincronizacionReceiveNonBlocking = new javax.swing.JRadioButton();
        rdbtnSincronizacionReceiveTestForArrival = new javax.swing.JRadioButton();
        panelSincronizacionSend = new javax.swing.JPanel();
        rdbtnSincronizacionSendNonBlocking = new javax.swing.JRadioButton();
        rdbtnSincronizacionSendBlocking = new javax.swing.JRadioButton();
        lblSincronizacionSend = new javax.swing.JLabel();
        panelConfigAddressing = new javax.swing.JPanel();
        lblAddressing = new javax.swing.JLabel();
        panelAddressingDirect = new javax.swing.JPanel();
        rdbtnAddressingDirectImplicit = new javax.swing.JRadioButton();
        rdbtnAddressingDirectExplicit = new javax.swing.JRadioButton();
        lblAddressingDirect = new javax.swing.JLabel();
        rdbtnAddressingIndirectDynamic = new javax.swing.JRadioButton();
        rdbtnAddressingIndirectStatic = new javax.swing.JRadioButton();
        lblAddressingIndirect = new javax.swing.JLabel();
        panelConfigSincronizacion2 = new javax.swing.JPanel();
        lblFormat = new javax.swing.JLabel();
        panelFormatLength = new javax.swing.JPanel();
        lblFormatLength = new javax.swing.JLabel();
        rdbtnFormatLengthFixed = new javax.swing.JRadioButton();
        rdbtnLengthVariable = new javax.swing.JRadioButton();
        panelFormatContent = new javax.swing.JPanel();
        lblFormatContent = new javax.swing.JLabel();
        cboFormatContent = new javax.swing.JComboBox<>();
        panelQueueingDiscipline = new javax.swing.JPanel();
        lblQueueingDiscipline = new javax.swing.JLabel();
        rdbtnQueueingDisciplineFIFO = new javax.swing.JRadioButton();
        rdbtnQueueingDisciplinePriority = new javax.swing.JRadioButton();
        btnGenerateConfig = new javax.swing.JButton();
        variableTabPanel1 = new javax.swing.JPanel();
        panelAddMailBox = new javax.swing.JPanel();
        txfMailBoxID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        spinMaxNoMessages = new javax.swing.JSpinner();
        btnAddMailBox = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMailBox = new javax.swing.JTable();
        panelAddProcess = new javax.swing.JPanel();
        txfProcessID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnAddProcess = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProcess = new javax.swing.JTable();
        cboSubscribeToMailBox = new javax.swing.JComboBox<>();
        lblSubscribeToMailBox = new javax.swing.JLabel();
        btnGoToRun = new javax.swing.JButton();
        startTab3 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableInteractiveProcessList = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        btnReceiveMessage = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        btnRunChooseFile = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnSendMessage = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        btnChooseFile = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jButton11 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTable16 = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTable17 = new javax.swing.JTable();
        jButton15 = new javax.swing.JButton();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTable18 = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTable19 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTable20 = new javax.swing.JTable();
        jButton16 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        configTabs.setMinimumSize(new java.awt.Dimension(82, 40));

        panelConfigSincronizacion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblSincronizacion.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblSincronizacion.setText("Synchronization");

        panelSincronizacionReceive.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btngrpSincronizacionReceive.add(rdbtnBSincronizacionReceiveBlocking);
        rdbtnBSincronizacionReceiveBlocking.setSelected(true);
        rdbtnBSincronizacionReceiveBlocking.setText("Blocking");

        lblSincronizacionReceive.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblSincronizacionReceive.setText("Receive");

        btngrpSincronizacionReceive.add(rdbtnSincronizacionReceiveNonBlocking);
        rdbtnSincronizacionReceiveNonBlocking.setText("Non-blocking");
        rdbtnSincronizacionReceiveNonBlocking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnSincronizacionReceiveNonBlockingActionPerformed(evt);
            }
        });

        btngrpSincronizacionReceive.add(rdbtnSincronizacionReceiveTestForArrival);
        rdbtnSincronizacionReceiveTestForArrival.setText("Test for arrival");
        rdbtnSincronizacionReceiveTestForArrival.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnSincronizacionReceiveTestForArrivalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSincronizacionReceiveLayout = new javax.swing.GroupLayout(panelSincronizacionReceive);
        panelSincronizacionReceive.setLayout(panelSincronizacionReceiveLayout);
        panelSincronizacionReceiveLayout.setHorizontalGroup(
            panelSincronizacionReceiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSincronizacionReceiveLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSincronizacionReceiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSincronizacionReceive, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbtnBSincronizacionReceiveBlocking)
                    .addComponent(rdbtnSincronizacionReceiveTestForArrival)
                    .addComponent(rdbtnSincronizacionReceiveNonBlocking))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        panelSincronizacionReceiveLayout.setVerticalGroup(
            panelSincronizacionReceiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSincronizacionReceiveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSincronizacionReceive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnBSincronizacionReceiveBlocking)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rdbtnSincronizacionReceiveNonBlocking)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnSincronizacionReceiveTestForArrival)
                .addGap(12, 12, 12))
        );

        panelSincronizacionSend.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btngrpSincronizacionSend.add(rdbtnSincronizacionSendNonBlocking);
        rdbtnSincronizacionSendNonBlocking.setText("Non-blocking");
        rdbtnSincronizacionSendNonBlocking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnSincronizacionSendNonBlockingActionPerformed(evt);
            }
        });

        btngrpSincronizacionSend.add(rdbtnSincronizacionSendBlocking);
        rdbtnSincronizacionSendBlocking.setSelected(true);
        rdbtnSincronizacionSendBlocking.setText("Blocking");

        lblSincronizacionSend.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblSincronizacionSend.setText("Send");

        javax.swing.GroupLayout panelSincronizacionSendLayout = new javax.swing.GroupLayout(panelSincronizacionSend);
        panelSincronizacionSend.setLayout(panelSincronizacionSendLayout);
        panelSincronizacionSendLayout.setHorizontalGroup(
            panelSincronizacionSendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSincronizacionSendLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSincronizacionSendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbtnSincronizacionSendNonBlocking)
                    .addComponent(lblSincronizacionSend, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbtnSincronizacionSendBlocking))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        panelSincronizacionSendLayout.setVerticalGroup(
            panelSincronizacionSendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSincronizacionSendLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSincronizacionSend)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnSincronizacionSendBlocking)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnSincronizacionSendNonBlocking)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelConfigSincronizacionLayout = new javax.swing.GroupLayout(panelConfigSincronizacion);
        panelConfigSincronizacion.setLayout(panelConfigSincronizacionLayout);
        panelConfigSincronizacionLayout.setHorizontalGroup(
            panelConfigSincronizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfigSincronizacionLayout.createSequentialGroup()
                .addGroup(panelConfigSincronizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConfigSincronizacionLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(panelSincronizacionReceive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelConfigSincronizacionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelConfigSincronizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSincronizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelSincronizacionSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelConfigSincronizacionLayout.setVerticalGroup(
            panelConfigSincronizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfigSincronizacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSincronizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSincronizacionSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSincronizacionReceive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelConfigAddressing.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblAddressing.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblAddressing.setText("Addressing");

        panelAddressingDirect.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btngrpAddressing.add(rdbtnAddressingDirectImplicit);
        rdbtnAddressingDirectImplicit.setText("Implicit");
        rdbtnAddressingDirectImplicit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnAddressingDirectImplicitActionPerformed(evt);
            }
        });

        btngrpAddressing.add(rdbtnAddressingDirectExplicit);
        rdbtnAddressingDirectExplicit.setSelected(true);
        rdbtnAddressingDirectExplicit.setText("Explicit");

        lblAddressingDirect.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblAddressingDirect.setText("Direct: Receive");

        btngrpAddressing.add(rdbtnAddressingIndirectDynamic);
        rdbtnAddressingIndirectDynamic.setText("Dynamic");

        btngrpAddressing.add(rdbtnAddressingIndirectStatic);
        rdbtnAddressingIndirectStatic.setText("Static");

        lblAddressingIndirect.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblAddressingIndirect.setText("Indirect");

        javax.swing.GroupLayout panelAddressingDirectLayout = new javax.swing.GroupLayout(panelAddressingDirect);
        panelAddressingDirect.setLayout(panelAddressingDirectLayout);
        panelAddressingDirectLayout.setHorizontalGroup(
            panelAddressingDirectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddressingDirectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddressingDirectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbtnAddressingDirectImplicit)
                    .addComponent(rdbtnAddressingDirectExplicit)
                    .addComponent(lblAddressingDirect)
                    .addComponent(lblAddressingIndirect)
                    .addComponent(rdbtnAddressingIndirectStatic)
                    .addComponent(rdbtnAddressingIndirectDynamic))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        panelAddressingDirectLayout.setVerticalGroup(
            panelAddressingDirectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddressingDirectLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAddressingDirect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnAddressingDirectExplicit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnAddressingDirectImplicit)
                .addGap(18, 18, 18)
                .addComponent(lblAddressingIndirect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnAddressingIndirectStatic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnAddressingIndirectDynamic)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelConfigAddressingLayout = new javax.swing.GroupLayout(panelConfigAddressing);
        panelConfigAddressing.setLayout(panelConfigAddressingLayout);
        panelConfigAddressingLayout.setHorizontalGroup(
            panelConfigAddressingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfigAddressingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConfigAddressingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelAddressingDirect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddressing, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelConfigAddressingLayout.setVerticalGroup(
            panelConfigAddressingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfigAddressingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAddressing, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAddressingDirect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelConfigSincronizacion2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelConfigSincronizacion2.setPreferredSize(new java.awt.Dimension(204, 294));

        lblFormat.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblFormat.setText("Format");

        panelFormatLength.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelFormatLength.setPreferredSize(new java.awt.Dimension(188, 103));

        lblFormatLength.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblFormatLength.setText("Length");

        btngrpFormatLength.add(rdbtnFormatLengthFixed);
        rdbtnFormatLengthFixed.setSelected(true);
        rdbtnFormatLengthFixed.setText("Fixed");

        btngrpFormatLength.add(rdbtnLengthVariable);
        rdbtnLengthVariable.setText("Variable");
        rdbtnLengthVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnLengthVariableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFormatLengthLayout = new javax.swing.GroupLayout(panelFormatLength);
        panelFormatLength.setLayout(panelFormatLengthLayout);
        panelFormatLengthLayout.setHorizontalGroup(
            panelFormatLengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormatLengthLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFormatLengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFormatLength, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbtnFormatLengthFixed)
                    .addComponent(rdbtnLengthVariable))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        panelFormatLengthLayout.setVerticalGroup(
            panelFormatLengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFormatLengthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFormatLength)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnFormatLengthFixed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rdbtnLengthVariable)
                .addGap(43, 43, 43))
        );

        panelFormatContent.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelFormatContent.setPreferredSize(new java.awt.Dimension(188, 103));

        lblFormatContent.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblFormatContent.setText("Content");

        cboFormatContent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TEXT", "AUDIO", "IMAGE", "VIDEO" }));

        javax.swing.GroupLayout panelFormatContentLayout = new javax.swing.GroupLayout(panelFormatContent);
        panelFormatContent.setLayout(panelFormatContentLayout);
        panelFormatContentLayout.setHorizontalGroup(
            panelFormatContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormatContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFormatContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFormatContentLayout.createSequentialGroup()
                        .addComponent(lblFormatContent)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cboFormatContent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelFormatContentLayout.setVerticalGroup(
            panelFormatContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFormatContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFormatContent)
                .addGap(18, 18, 18)
                .addComponent(cboFormatContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelConfigSincronizacion2Layout = new javax.swing.GroupLayout(panelConfigSincronizacion2);
        panelConfigSincronizacion2.setLayout(panelConfigSincronizacion2Layout);
        panelConfigSincronizacion2Layout.setHorizontalGroup(
            panelConfigSincronizacion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfigSincronizacion2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConfigSincronizacion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConfigSincronizacion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(panelFormatContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelFormatLength, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelConfigSincronizacion2Layout.setVerticalGroup(
            panelConfigSincronizacion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfigSincronizacion2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelFormatContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelFormatLength, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelQueueingDiscipline.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelQueueingDiscipline.setPreferredSize(new java.awt.Dimension(204, 294));

        lblQueueingDiscipline.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblQueueingDiscipline.setText("MailBox Discipline");

        btngrpMailBoxDiscipline.add(rdbtnQueueingDisciplineFIFO);
        rdbtnQueueingDisciplineFIFO.setSelected(true);
        rdbtnQueueingDisciplineFIFO.setText("FIFO");

        btngrpMailBoxDiscipline.add(rdbtnQueueingDisciplinePriority);
        rdbtnQueueingDisciplinePriority.setText("Priority");
        rdbtnQueueingDisciplinePriority.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnQueueingDisciplinePriorityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelQueueingDisciplineLayout = new javax.swing.GroupLayout(panelQueueingDiscipline);
        panelQueueingDiscipline.setLayout(panelQueueingDisciplineLayout);
        panelQueueingDisciplineLayout.setHorizontalGroup(
            panelQueueingDisciplineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelQueueingDisciplineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQueueingDiscipline, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelQueueingDisciplineLayout.createSequentialGroup()
                .addGroup(panelQueueingDisciplineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbtnQueueingDisciplineFIFO)
                    .addComponent(rdbtnQueueingDisciplinePriority))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelQueueingDisciplineLayout.setVerticalGroup(
            panelQueueingDisciplineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelQueueingDisciplineLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblQueueingDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbtnQueueingDisciplineFIFO)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnQueueingDisciplinePriority)
                .addGap(15, 15, 15))
        );

        btnGenerateConfig.setText("Next");
        btnGenerateConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateConfigActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout configTabPanel1Layout = new javax.swing.GroupLayout(configTabPanel1);
        configTabPanel1.setLayout(configTabPanel1Layout);
        configTabPanel1Layout.setHorizontalGroup(
            configTabPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configTabPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(configTabPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelQueueingDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(configTabPanel1Layout.createSequentialGroup()
                        .addComponent(panelConfigSincronizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelConfigAddressing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelConfigSincronizacion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(119, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configTabPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGenerateConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        configTabPanel1Layout.setVerticalGroup(
            configTabPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configTabPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(configTabPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelConfigSincronizacion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelConfigAddressing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelConfigSincronizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelQueueingDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGenerateConfig)
                .addContainerGap())
        );

        configTabs.addTab("Parameters", configTabPanel1);

        variableTabPanel1.setPreferredSize(new java.awt.Dimension(32767, 32767));

        panelAddMailBox.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txfMailBoxID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfMailBoxIDActionPerformed(evt);
            }
        });

        jLabel1.setText("Add MailBox");

        jLabel4.setText("Name");

        jLabel6.setText("Max No. Messages");

        btnAddMailBox.setText("Add");
        btnAddMailBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMailBoxActionPerformed(evt);
            }
        });

        tableMailBox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MBID", "No Messages"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableMailBox);
        if (tableMailBox.getColumnModel().getColumnCount() > 0) {
            tableMailBox.getColumnModel().getColumn(0).setResizable(false);
            tableMailBox.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout panelAddMailBoxLayout = new javax.swing.GroupLayout(panelAddMailBox);
        panelAddMailBox.setLayout(panelAddMailBoxLayout);
        panelAddMailBoxLayout.setHorizontalGroup(
            panelAddMailBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddMailBoxLayout.createSequentialGroup()
                .addGroup(panelAddMailBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddMailBoxLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addGroup(panelAddMailBoxLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(panelAddMailBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAddMailBoxLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelAddMailBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddMailBoxLayout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(57, 57, 57))
                                    .addComponent(txfMailBoxID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelAddMailBoxLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(spinMaxNoMessages, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddMailBoxLayout.createSequentialGroup()
                        .addContainerGap(110, Short.MAX_VALUE)
                        .addComponent(btnAddMailBox, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)))
                .addContainerGap())
        );
        panelAddMailBoxLayout.setVerticalGroup(
            panelAddMailBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddMailBoxLayout.createSequentialGroup()
                .addGroup(panelAddMailBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelAddMailBoxLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE))
                    .addGroup(panelAddMailBoxLayout.createSequentialGroup()
                        .addContainerGap(52, Short.MAX_VALUE)
                        .addGroup(panelAddMailBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txfMailBoxID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelAddMailBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(spinMaxNoMessages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)))
                .addComponent(btnAddMailBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelAddProcess.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelAddProcess.setPreferredSize(new java.awt.Dimension(296, 456));

        txfProcessID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfProcessIDActionPerformed(evt);
            }
        });

        jLabel2.setText("Add Process");

        btnAddProcess.setText("Add");
        btnAddProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProcessActionPerformed(evt);
            }
        });

        jLabel3.setText("Name");

        tableProcess.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "Subscribed to MBID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableProcess);
        if (tableProcess.getColumnModel().getColumnCount() > 0) {
            tableProcess.getColumnModel().getColumn(0).setResizable(false);
            tableProcess.getColumnModel().getColumn(1).setResizable(false);
        }

        lblSubscribeToMailBox.setText("Subscribe to MailBox");

        javax.swing.GroupLayout panelAddProcessLayout = new javax.swing.GroupLayout(panelAddProcess);
        panelAddProcess.setLayout(panelAddProcessLayout);
        panelAddProcessLayout.setHorizontalGroup(
            panelAddProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddProcessLayout.createSequentialGroup()
                .addGroup(panelAddProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddProcessLayout.createSequentialGroup()
                        .addGroup(panelAddProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAddProcessLayout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelAddProcessLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelAddProcessLayout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(btnAddProcess)))
                        .addGap(0, 5, Short.MAX_VALUE))
                    .addGroup(panelAddProcessLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelAddProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboSubscribeToMailBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txfProcessID))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddProcessLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblSubscribeToMailBox, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        panelAddProcessLayout.setVerticalGroup(
            panelAddProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddProcessLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(panelAddProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfProcessID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSubscribeToMailBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboSubscribeToMailBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddProcess)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnGoToRun.setText("Next");
        btnGoToRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToRunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout variableTabPanel1Layout = new javax.swing.GroupLayout(variableTabPanel1);
        variableTabPanel1.setLayout(variableTabPanel1Layout);
        variableTabPanel1Layout.setHorizontalGroup(
            variableTabPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, variableTabPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(panelAddProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelAddMailBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(btnGoToRun, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        variableTabPanel1Layout.setVerticalGroup(
            variableTabPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, variableTabPanel1Layout.createSequentialGroup()
                .addGroup(variableTabPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(variableTabPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGoToRun))
                    .addGroup(variableTabPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(variableTabPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelAddProcess, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                            .addComponent(panelAddMailBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        configTabs.addTab("Objects", variableTabPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setPreferredSize(new java.awt.Dimension(330, 502));

        jLabel8.setText("Interactive");

        tableInteractiveProcessList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "Status", "Blocked"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableInteractiveProcessList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableInteractiveProcessListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableInteractiveProcessList);
        if (tableInteractiveProcessList.getColumnModel().getColumnCount() > 0) {
            tableInteractiveProcessList.getColumnModel().getColumn(0).setResizable(false);
            tableInteractiveProcessList.getColumnModel().getColumn(1).setResizable(false);
            tableInteractiveProcessList.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setText("Receive");

        btnReceiveMessage.setText("Receive");
        btnReceiveMessage.setEnabled(false);

        jLabel10.setText("Source");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 33, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(btnReceiveMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(100, 100, 100))))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReceiveMessage, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnRunChooseFile.setText("Choose File");
        btnRunChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunChooseFileActionPerformed(evt);
            }
        });

        jLabel12.setText("Destination");

        jLabel11.setText("Send");

        btngrpInteractiveSend.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Type Message");

        btngrpInteractiveSend.add(jRadioButton2);
        jRadioButton2.setText("Upload File");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        btnSendMessage.setText("Send");
        btnSendMessage.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jRadioButton2)
                                .addGap(0, 0, 0)
                                .addComponent(btnRunChooseFile))
                            .addComponent(jRadioButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(btnSendMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane4)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton2)
                    .addComponent(btnRunChooseFile)
                    .addComponent(btnSendMessage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 288, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setMinimumSize(new java.awt.Dimension(32767, 32767));
        jPanel4.setPreferredSize(new java.awt.Dimension(32767, 32767));

        jLabel9.setText("Batch");

        btnChooseFile.setText("Choose File");
        btnChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseFileActionPerformed(evt);
            }
        });

        jLabel13.setText("No.  of commands  to be executed");

        jButton11.setText("Execute");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel9))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(btnChooseFile)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton11)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnChooseFile)
                            .addComponent(jButton11))))
                .addGap(73, 73, 73))
        );

        javax.swing.GroupLayout startTab3Layout = new javax.swing.GroupLayout(startTab3);
        startTab3.setLayout(startTab3Layout);
        startTab3Layout.setHorizontalGroup(
            startTab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startTab3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(startTab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(startTab3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1455, 1455, 1455))
        );
        startTab3Layout.setVerticalGroup(
            startTab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startTab3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        configTabs.addTab("Run", startTab3);

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Action", "MID", "Timestamp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable6);
        if (jTable6.getColumnModel().getColumnCount() > 0) {
            jTable6.getColumnModel().getColumn(0).setResizable(false);
            jTable6.getColumnModel().getColumn(1).setResizable(false);
            jTable6.getColumnModel().getColumn(2).setResizable(false);
            jTable6.getColumnModel().getColumn(2).setHeaderValue("Timestamp");
        }

        jLabel15.setText("Process");

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "PID", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTable7);
        if (jTable7.getColumnModel().getColumnCount() > 0) {
            jTable7.getColumnModel().getColumn(0).setResizable(false);
            jTable7.getColumnModel().getColumn(1).setResizable(false);
        }

        jButton6.setText("View");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jLabel15)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(59, 59, 59))))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable16.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "MID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane16.setViewportView(jTable16);
        if (jTable16.getColumnModel().getColumnCount() > 0) {
            jTable16.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel19.setText("Queue");

        jTable17.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "QID", "Current Messages"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane17.setViewportView(jTable17);
        if (jTable17.getColumnModel().getColumnCount() > 0) {
            jTable17.getColumnModel().getColumn(0).setResizable(false);
            jTable17.getColumnModel().getColumn(1).setResizable(false);
        }

        jButton15.setText("View");

        jTable18.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "PID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane18.setViewportView(jTable18);
        if (jTable18.getColumnModel().getColumnCount() > 0) {
            jTable18.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton15))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jLabel19)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(jButton15)
                        .addGap(59, 59, 59))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable19.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "MID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane19.setViewportView(jTable19);
        if (jTable19.getColumnModel().getColumnCount() > 0) {
            jTable19.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel20.setText("Mailbox");

        jTable20.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "MBID", "Owner"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane20.setViewportView(jTable20);
        if (jTable20.getColumnModel().getColumnCount() > 0) {
            jTable20.getColumnModel().getColumn(0).setResizable(false);
            jTable20.getColumnModel().getColumn(1).setResizable(false);
        }

        jButton16.setText("View");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(222, 222, 222)
                        .addComponent(jButton16))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jLabel20)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addComponent(jButton16)
                        .addGap(59, 59, 59))))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        configTabs.addTab("Display", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(configTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(configTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void checkPanelAddMailBoxVisibility(){
        Addressing addressing = controlador.getConfiguration().getAddressing();
        if (addressing.equals(Addressing.EXPLICIT) || addressing.equals(Addressing.IMPLICIT)){
            panelAddMailBox.setVisible(false);
            cboSubscribeToMailBox.setVisible(false);
            lblSubscribeToMailBox.setVisible(false);
        }
        else{
            panelAddProcess.setVisible(false);
            
        }
    }
    
    private void txfProcessIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfProcessIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfProcessIDActionPerformed

    private void txfMailBoxIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfMailBoxIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfMailBoxIDActionPerformed

    private void rdbtnQueueingDisciplinePriorityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnQueueingDisciplinePriorityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnQueueingDisciplinePriorityActionPerformed

    private void rdbtnLengthVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnLengthVariableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnLengthVariableActionPerformed

    private void rdbtnAddressingDirectImplicitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnAddressingDirectImplicitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnAddressingDirectImplicitActionPerformed

    private void rdbtnSincronizacionSendNonBlockingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnSincronizacionSendNonBlockingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnSincronizacionSendNonBlockingActionPerformed

    private void rdbtnSincronizacionReceiveTestForArrivalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnSincronizacionReceiveTestForArrivalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnSincronizacionReceiveTestForArrivalActionPerformed

    private void rdbtnSincronizacionReceiveNonBlockingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnSincronizacionReceiveNonBlockingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnSincronizacionReceiveNonBlockingActionPerformed

    private void btnChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseFileActionPerformed
        try {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
            chooser.setFileFilter(filter);
            int returnVal = chooser.showOpenDialog(null);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                String entrada = chooser.getSelectedFile().getPath();
                BufferedReader bf = new BufferedReader(new FileReader(entrada));                
                System.out.println("Archivo .txt cargado correctamente");
                String linea;
		while((linea = bf.readLine()) != null)
                    System.out.println(linea);
                    //En vez de imprimir se debe llamar funciones segun lo que lea.
                    //Definir formato del archivo de batch.
            }
        } catch (Exception e) {
            System.out.println("Error: no se pudo cargar el archivo");
        } 
    }//GEN-LAST:event_btnChooseFileActionPerformed

    private void btnGenerateConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateConfigActionPerformed
        // TODO add your handling code here:
        Sync_Receive receive;
        Sync_Send send;
        Addressing addressing = null;
        Format_Content content;
        Format_Length length;
        MailBox_Discipline discipline;

        send = (rdbtnSincronizacionSendBlocking.isSelected())?Sync_Send.BLOCKING:Sync_Send.NON_BLOCKING;
        receive = (rdbtnBSincronizacionReceiveBlocking.isSelected())?Sync_Receive.BLOCKING:
                  ((rdbtnSincronizacionReceiveNonBlocking.isSelected())?Sync_Receive.NON_BLOCKING:Sync_Receive.TEST_FOR_ARRIVAL);
        length = (rdbtnFormatLengthFixed.isSelected())?Format_Length.FIXED:Format_Length.VARIABLE;
        discipline = (rdbtnQueueingDisciplineFIFO.isSelected())?MailBox_Discipline.FIFO:MailBox_Discipline.PRIORITY;
        content = Format_Content.valueOf(cboFormatContent.getSelectedItem().toString());
        if (rdbtnAddressingDirectExplicit.isSelected())
            addressing = Addressing.EXPLICIT;
        if (rdbtnAddressingDirectImplicit.isSelected())
            addressing = Addressing.IMPLICIT;
        if (rdbtnAddressingIndirectStatic.isSelected())
            addressing = Addressing.STATIC;
        if (rdbtnAddressingIndirectDynamic.isSelected())
            addressing = Addressing.DYNAMIC;

        //JOptionPane.showMessageDialog(null, "Receive: " + receive.toString() + "\n Send: " + send.toString() + "\n Addressing: " + addressing.toString() + "\n Content: " + content.toString() + "\n Length: " + length.toString() + "\n Discipline: " + discipline.toString(), "Resumen de variables", 1);
        
        controlador.setConfiguration(receive, send, addressing, content, length, discipline);
        checkPanelAddMailBoxVisibility();
        configTabs.setSelectedIndex(1);
            
    }//GEN-LAST:event_btnGenerateConfigActionPerformed

    private void btnAddProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProcessActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel)tableProcess.getModel();
        Addressing addressing = controlador.getConfiguration().getAddressing();
        ArrayList<MailBox> mailboxes = controlador.getMailBoxes();
        MailBox selectedMailBox = null;
        
        for(MailBox mail: mailboxes){
            if (mail.idMailBox.equals(cboSubscribeToMailBox.getSelectedItem().toString()))
                selectedMailBox = mail;
        }
        
            Proceso nuevoProceso = new Proceso(txfProcessID.getText(), false, false, false);
            controlador.addProcess(nuevoProceso);
            
            // Si el addressing es directo solo se necesita el PID y se agrega
            if (addressing.equals(Addressing.EXPLICIT) || addressing.equals(Addressing.IMPLICIT)){
                modelo.addRow(new Object[]{txfProcessID.getText(),"None"});
            }
            else{
                if (addressing.equals(Addressing.STATIC) && selectedMailBox.getSuscritos().size() < 1){
                    selectedMailBox.getSuscritos().add(nuevoProceso);
                    modelo.addRow(new Object[]{txfProcessID.getText(),cboSubscribeToMailBox.getSelectedItem().toString()});
                }else{
                    if(addressing.equals(Addressing.DYNAMIC)){
                        selectedMailBox.getSuscritos().add(nuevoProceso);
                        modelo.addRow(new Object[]{txfProcessID.getText(),cboSubscribeToMailBox.getSelectedItem().toString()});
                    }else{
                        JOptionPane.showMessageDialog(null, "The selected MailBox has already 1 subscribed Process", "Subscription error to MailBox", 0);
                    }
                    //JOptionPane.showMessageDialog(null, "MailBox: " + selectedMailBox.getIdMailBox() + " tiene " + String.valueOf(selectedMailBox.getSuscritos().size()) + " procesos", "Mensaje", 1);
                }
            }

            txfProcessID.setText("");
            tableProcess.setModel(modelo);
        
    }//GEN-LAST:event_btnAddProcessActionPerformed

    private void btnRunChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunChooseFileActionPerformed
        try {
            JFileChooser chooser = new JFileChooser();
            //FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
            //chooser.setFileFilter(filter);
            int returnVal = chooser.showOpenDialog(null);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                String entrada = chooser.getSelectedFile().getPath(); 
                String[] tokens = entrada.split("\\.(?=[^\\.]+$)");
                
                if(controlador.getConfiguration().content.equals(Format_Content.IMAGE)){
                    try {
                    ImagesExtension prueba = ImagesExtension.valueOf(tokens[1]);
                     System.out.println("Archivo " + tokens[1] + " cargado correctamente");
                    } catch (IllegalArgumentException ex) {  
                         System.out.println("Error: Formato " + tokens[1] + " no admitido");
                    }
                }              
                
                if(controlador.getConfiguration().content.equals(Format_Content.VIDEO)){
                    try {
                        VideoExtension prueba = VideoExtension.valueOf(tokens[1]);
                         System.out.println("Archivo " + tokens[1] + " cargado correctamente");
                    } catch (IllegalArgumentException ex) {  
                         System.out.println("Error: Formato " + tokens[1] + " no admitido");
                    }
                }
                
                if(controlador.getConfiguration().content.equals(Format_Content.AUDIO)){
                    try {
                        AudioExtension prueba = AudioExtension.valueOf(tokens[1]);
                         System.out.println("Archivo " + tokens[1] + " cargado correctamente");
                    } catch (IllegalArgumentException ex) {  
                         System.out.println("Error: Formato " + tokens[1] + " no admitido");
                    }
                }
                
            }
        } catch (Exception e) {
            System.out.println("Error: no se pudo cargar el archivo");
        } 
    }//GEN-LAST:event_btnRunChooseFileActionPerformed
    private void btnAddMailBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMailBoxActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel)tableMailBox.getModel();
        
        controlador.addMailBox(new MailBox(txfMailBoxID.getText(), Integer.valueOf(spinMaxNoMessages.getValue().toString())));
        
        modelo.addRow(new Object[]{txfMailBoxID.getText(),spinMaxNoMessages.getValue().toString()});
        
        tableMailBox.setModel(modelo);    
        
        panelAddProcess.setVisible(true);
        cboSubscribeToMailBox.insertItemAt(txfMailBoxID.getText(), cboSubscribeToMailBox.getItemCount());//mail.getIdMailBox(), cboSubscribeToMailBox.getItemCount());
        cboSubscribeToMailBox.setSelectedIndex(0);
        
        
    }//GEN-LAST:event_btnAddMailBoxActionPerformed

    
    void fillRunView(){
       DefaultTableModel modelo = (DefaultTableModel) tableInteractiveProcessList.getModel();
       for(Proceso proceso: controlador.getProcesses()){
           modelo.addRow(new Object[]{proceso.getIdProceso(), "Running", false});
       }
        
    }
    
    private void btnGoToRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToRunActionPerformed
        // TODO add your handling code here:
        configTabs.setSelectedIndex(2);
        configTabs.setEnabledAt(0,false);
        configTabs.setEnabledAt(1,false);
        fillRunView();
    }//GEN-LAST:event_btnGoToRunActionPerformed

    private void tableInteractiveProcessListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableInteractiveProcessListMouseClicked
        // TODO add your handling code here:
        btnSendMessage.setEnabled(true);
        btnReceiveMessage.setEnabled(true);
        
        
    }//GEN-LAST:event_tableInteractiveProcessListMouseClicked

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMailBox;
    private javax.swing.JButton btnAddProcess;
    private javax.swing.JButton btnChooseFile;
    private javax.swing.JButton btnGenerateConfig;
    private javax.swing.JButton btnGoToRun;
    private javax.swing.JButton btnReceiveMessage;
    private javax.swing.JButton btnRunChooseFile;
    private javax.swing.JButton btnSendMessage;
    private javax.swing.ButtonGroup btngrpAddressing;
    private javax.swing.ButtonGroup btngrpFormatLength;
    private javax.swing.ButtonGroup btngrpInteractiveSend;
    private javax.swing.ButtonGroup btngrpMailBoxDiscipline;
    private javax.swing.ButtonGroup btngrpSincronizacionReceive;
    private javax.swing.ButtonGroup btngrpSincronizacionSend;
    private javax.swing.JComboBox<String> cboFormatContent;
    private javax.swing.JComboBox<String> cboSubscribeToMailBox;
    private javax.swing.JPanel configTabPanel1;
    private javax.swing.JTabbedPane configTabs;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable16;
    private javax.swing.JTable jTable17;
    private javax.swing.JTable jTable18;
    private javax.swing.JTable jTable19;
    private javax.swing.JTable jTable20;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblAddressing;
    private javax.swing.JLabel lblAddressingDirect;
    private javax.swing.JLabel lblAddressingIndirect;
    private javax.swing.JLabel lblFormat;
    private javax.swing.JLabel lblFormatContent;
    private javax.swing.JLabel lblFormatLength;
    private javax.swing.JLabel lblQueueingDiscipline;
    private javax.swing.JLabel lblSincronizacion;
    private javax.swing.JLabel lblSincronizacionReceive;
    private javax.swing.JLabel lblSincronizacionSend;
    private javax.swing.JLabel lblSubscribeToMailBox;
    private javax.swing.JPanel panelAddMailBox;
    private javax.swing.JPanel panelAddProcess;
    private javax.swing.JPanel panelAddressingDirect;
    private javax.swing.JPanel panelConfigAddressing;
    private javax.swing.JPanel panelConfigSincronizacion;
    private javax.swing.JPanel panelConfigSincronizacion2;
    private javax.swing.JPanel panelFormatContent;
    private javax.swing.JPanel panelFormatLength;
    private javax.swing.JPanel panelQueueingDiscipline;
    private javax.swing.JPanel panelSincronizacionReceive;
    private javax.swing.JPanel panelSincronizacionSend;
    private javax.swing.JRadioButton rdbtnAddressingDirectExplicit;
    private javax.swing.JRadioButton rdbtnAddressingDirectImplicit;
    private javax.swing.JRadioButton rdbtnAddressingIndirectDynamic;
    private javax.swing.JRadioButton rdbtnAddressingIndirectStatic;
    private javax.swing.JRadioButton rdbtnBSincronizacionReceiveBlocking;
    private javax.swing.JRadioButton rdbtnFormatLengthFixed;
    private javax.swing.JRadioButton rdbtnLengthVariable;
    private javax.swing.JRadioButton rdbtnQueueingDisciplineFIFO;
    private javax.swing.JRadioButton rdbtnQueueingDisciplinePriority;
    private javax.swing.JRadioButton rdbtnSincronizacionReceiveNonBlocking;
    private javax.swing.JRadioButton rdbtnSincronizacionReceiveTestForArrival;
    private javax.swing.JRadioButton rdbtnSincronizacionSendBlocking;
    private javax.swing.JRadioButton rdbtnSincronizacionSendNonBlocking;
    private javax.swing.JSpinner spinMaxNoMessages;
    private javax.swing.JPanel startTab3;
    private javax.swing.JTable tableInteractiveProcessList;
    private javax.swing.JTable tableMailBox;
    private javax.swing.JTable tableProcess;
    private javax.swing.JTextField txfMailBoxID;
    private javax.swing.JTextField txfProcessID;
    private javax.swing.JPanel variableTabPanel1;
    // End of variables declaration//GEN-END:variables
}
